#<laconf>
  compiler 
  {
     base-class-name="Serbench.WebViewer.Master"
     namespace="Serbench.WebViewer"
     abstract="false"
     summary="Index navigation of test results"
  }
#</laconf>
#[class]

    public override string Title { get {return "Serbench Test Index"; } }

#[override renderHeader()]
 <h1>
     @[if (ShowDump){]
       ?["'{0}' Error".Args(ErrorCause.GetType().Name)]
     @[}else{]
       OOPS! An Error Occured
     @[}]
 </h1> 
#[override renderBody()]
    @[if (ShowDump)
      { 
        showDumpBody();
        return;
      }]
 <p> An error happened while generating the page. We apologize for inconvenience. </p> 
 <p> The error details may have been logged. Please consult with your web guru! </p> 

#[showDumpBody()]
<div>
    <strong>Handler Match:</strong> ?[Context.Match!=null?Context.Match.Name : "[no match]"]<br />

    @[showException(ErrorCause);]

 </div>
#[showException(Exception err)]
@[if(err==null) return;]
    <strong>Type:</strong> ?[err.GetType().FullName]<br />
    <strong>Message:</strong> ?[err.Message]<br />
    
    @[if(err is HTTPStatusException)
      {
        var se = err as HTTPStatusException;]
     <strong>Http Status Code:</strong> ?[se.StatusCode]<br />
     <strong>Http Status Description:</strong> ?[se.StatusDescription]<br />
    @[}] 
     
    <strong>Stack Trace:</strong><br /> 
     <div class="stackTrace">
     ?[err.StackTrace]
     </div> 
    
    
    @[if (err is FilterPipelineException){]
      <br />      
      <strong>Root Exception:</strong>
          
      <hr />
      @[showException(((FilterPipelineException)err).RootException);]
    @[}else
     {
      var inner = err.InnerException;
      if (inner==null) return;
     ]
    <br />    
    <strong>Inner Exception:</strong>    
    <hr />
    @[showException(inner);] 
    @[}]
   &nbsp;